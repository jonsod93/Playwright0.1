name: Nightly Playwright Tests

on:
  schedule:
    - cron: '0 23 * * *' # 01:00 CEST
    - cron: '0 2 * * *'  # 04:00 CEST
    - cron: '0 4 * * *'  # 06:00 CEST
  workflow_dispatch:

jobs:
  run-tests:
    if: github.event.schedule != '0 4 * * *' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.6.0

      - name: Setup Node.js
        uses: actions/setup-node@v3.8.1
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Build helper scripts
        run: npm run build

      - name: Download previous allure history
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: allure-report/history
        continue-on-error: true

      - name: Run pre-run setup
        run: npm run pre-run

      - name: Run Playwright tests
        run: npm run test || true

      - name: Generate temporary Allure report
        run: npm run report

      - name: Debug report output
        run: ls -R allure-report || echo "No report directory found"

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Upload updated history
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: allure-report/history

  generate-report:
    needs: run-tests
    if: github.event.schedule == '0 4 * * *' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.6.0

      - name: Setup Node.js
        uses: actions/setup-node@v3.8.1
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build helper scripts
        run: npm run build
      
      - name: Download previous allure history
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: allure-report/history
        continue-on-error: true

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Run pre-run setup (merges history, creates executor)
        run: npm run pre-run

      - name: Generate final Allure report
        run: npm run report

      - name: Check if report exists
        id: check_report
        run: |
          if [ ! -d "allure-report" ]; then
            echo "Report directory does not exist"
            echo "skip_deploy=true" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to GitHub Pages
        if: steps.check_report.outputs.skip_deploy != 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report

      - name: Parse Allure summary.json
        id: summary
        run: |
          SUMMARY_PATH="allure-report/widgets/summary.json"
          if [ -f "$SUMMARY_PATH" ]; then
              STATS=$(cat $SUMMARY_PATH | jq '.statistic')
              echo "passed=$(echo $STATS | jq '.passed')" >> $GITHUB_OUTPUT
              echo "failed=$(echo $STATS | jq '.failed')" >> $GITHUB_OUTPUT
              echo "broken=$(echo $STATS | jq '.broken')" >> $GITHUB_OUTPUT
              echo "skipped=$(echo $STATS | jq '.skipped')" >> $GITHUB_OUTPUT
              echo "total=$(echo $STATS | jq '.total')" >> $GITHUB_OUTPUT
          else
              echo "No summary.json found."
          fi

      - name: Send email with report link
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: '🧪 Allure Report: Nightly Test Summary'
          to: ${{ secrets.REPORT_RECIPIENT }}
          from: Playwright Bot <${{ secrets.EMAIL_USERNAME }}>
          html_body: |
            <h2>✅ Nightly Playwright Test Report</h2>
            <p><strong>Summary:</strong></p>
            <ul>
                <li>✅ Passed: ${{ steps.summary.outputs.passed }}</li>
                <li>❌ Failed: ${{ steps.summary.outputs.failed }}</li>
                <li>⚠️ Broken: ${{ steps.summary.outputs.broken }}</li>
                <li>⏭️ Skipped: ${{ steps.summary.outputs.skipped }}</li>
                <li>📊 Total: ${{ steps.summary.outputs.total }}</li>
            </ul>

            <p><strong>📂 Report:</strong> <a href="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" target="_blank">View Allure Report</a></p>
            <p><strong>📌 Workflow Run:</strong> <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" target="_blank">View on GitHub</a></p>

            <p>Generated by the scheduled 06:00 CEST run.</p>
